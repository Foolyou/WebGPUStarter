export function getVertexFormatSize (format: GPUVertexFormat) {
  switch (format) {
    case 'uint8x2':
      return 2
    case 'uint8x4':
      return 4
    case 'sint8x2':
      return 2
    case 'sint8x4':
      return 4
    case 'unorm8x2':
      return 2
    case 'unorm8x4':
      return 4
    case 'snorm8x2':
      return 2
    case 'snorm8x4':
      return 4
    case 'uint16x2':
      return 4
    case 'uint16x4':
      return 8
    case 'sint16x2':
      return 4
    case 'sint16x4':
      return 8
    case 'unorm16x2':
      return 4
    case 'unorm16x4':
      return 8
    case 'snorm16x2':
      return 4
    case 'snorm16x4':
      return 8
    case 'float16x2':
      return 4
    case 'float16x4':
      return 8
    case 'float32':
      return 4
    case 'float32x2':
      return 8
    case 'float32x3':
      return 12
    case 'float32x4':
      return 16
    case 'uint32':
      return 4
    case 'uint32x2':
      return 8
    case 'uint32x3':
      return 12
    case 'uint32x4':
      return 16
    case 'sint32':
      return 4
    case 'sint32x2':
      return 8
    case 'sint32x3':
      return 12
    case 'sint32x4':
      return 16
    case 'unorm10-10-10-2':
      return 4
  }
}

export function getVertexFormatTypedArrayCtor (format: GPUVertexFormat) {
  switch (format) {
    case 'uint8x2':
      return Uint8Array
    case 'uint8x4':
      return Uint8Array
    case 'sint8x2':
      return Int8Array
    case 'sint8x4':
      return Int8Array
    case 'unorm8x2':
      return Uint8Array
    case 'unorm8x4':
      return Uint8Array
    case 'snorm8x2':
      return Int8Array
    case 'snorm8x4':
      return Int8Array
    case 'uint16x2':
      return Uint16Array
    case 'uint16x4':
      return Uint16Array
    case 'sint16x2':
      return Int16Array
    case 'sint16x4':
      return Int16Array
    case 'unorm16x2':
      return Uint16Array
    case 'unorm16x4':
      return Uint16Array
    case 'snorm16x2':
      return Int16Array
    case 'snorm16x4':
      return Int16Array
    case 'float16x2':
      // TODO: use what?
      return Float32Array
    case 'float16x4':
      // TODO: use what?
      return Float32Array
    case 'float32':
      return Float32Array
    case 'float32x2':
      return Float32Array
    case 'float32x3':
      return Float32Array
    case 'float32x4':
      return Float32Array
    case 'uint32':
      return Uint32Array
    case 'uint32x2':
      return Uint32Array
    case 'uint32x3':
      return Uint32Array
    case 'uint32x4':
      return Uint32Array
    case 'sint32':
      return Int32Array
    case 'sint32x2':
      return Int32Array
    case 'sint32x3':
      return Int32Array
    case 'sint32x4':
      return Int32Array
    case 'unorm10-10-10-2':
      // TODO: use what?
      return Uint32Array
  }
}
